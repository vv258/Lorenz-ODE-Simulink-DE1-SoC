// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\lorenz_model\Lorenz_FP_ip_src_Lorenz_FPGA_system.v
// Created: 2019-05-03 13:00:03
// 
// Generated by MATLAB 9.4 and HDL Coder 3.12
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 0.2
// Target subsystem base rate: 0.2
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        0.2
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// x                             ce_out        0.2
// y                             ce_out        0.2
// z                             ce_out        0.2
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Lorenz_FP_ip_src_Lorenz_FPGA_system
// Source Path: lorenz_model/Lorenz_FPGA_system
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Lorenz_FP_ip_src_Lorenz_FPGA_system
          (clk,
           reset,
           clk_enable,
           RST,
           ce_out,
           x,
           y,
           z);


  input   clk;
  input   reset;
  input   clk_enable;
  input   RST;
  output  ce_out;
  output  signed [26:0] x;  // sfix27_En20
  output  signed [26:0] y;  // sfix27_En20
  output  signed [26:0] z;  // sfix27_En20


  wire signed [26:0] sigma_dt_out1;  // sfix27_En20
  wire signed [26:0] dt_out1;  // sfix27_En20
  wire signed [26:0] rho_out1;  // sfix27_En20
  wire signed [26:0] beta_dt_out1;  // sfix27_En20
  wire signed [26:0] z0_out1;  // sfix27_En20
  wire signed [26:0] y0_out1;  // sfix27_En20
  wire signed [26:0] x0_out1;  // sfix27_En20
  wire signed [26:0] Subsystem1_out1;  // sfix27_En20
  wire signed [53:0] y_dt_mul_temp;  // sfix54_En40
  wire signed [26:0] y_dt_out1;  // sfix27_En20
  wire signed [26:0] Subsystem2_out1;  // sfix27_En20
  wire signed [53:0] Product3_mul_temp;  // sfix54_En40
  wire signed [26:0] Product3_out1;  // sfix27_En20
  wire signed [26:0] x_dt_out1;  // sfix27_En20
  wire signed [53:0] Product1_mul_temp;  // sfix54_En40
  wire signed [26:0] Product1_out1;  // sfix27_En20
  wire signed [26:0] Subtract2_out1;  // sfix27_En20
  wire signed [26:0] Subtract1_out1;  // sfix27_En20
  wire signed [26:0] Subsystem_out1;  // sfix27_En20
  wire signed [53:0] x_dt_mul_temp;  // sfix54_En40
  wire signed [53:0] Product_mul_temp;  // sfix54_En40
  wire signed [26:0] Product_out1;  // sfix27_En20
  wire signed [26:0] Subtract3_out1;  // sfix27_En20
  wire signed [26:0] Subtract_out1;  // sfix27_En20
  wire signed [53:0] Product2_mul_temp;  // sfix54_En40
  wire signed [26:0] Product2_out1;  // sfix27_En20


  assign sigma_dt_out1 = 27'sb000000000000010100011111010;



  assign dt_out1 = 27'sb000000000000000010000011001;



  assign rho_out1 = 27'sb001110000000000000000000000;



  assign beta_dt_out1 = 27'sb000000000000000011011001101;



  assign z0_out1 = 27'sb001100100000000000000000000;



  assign y0_out1 = 27'sb000000000011001100110011010;



  assign x0_out1 = 27'sb111111100000000000000000000;



  assign y_dt_mul_temp = Subsystem1_out1 * dt_out1;
  assign y_dt_out1 = y_dt_mul_temp[46:20];



  assign Product3_mul_temp = Subsystem2_out1 * beta_dt_out1;
  assign Product3_out1 = Product3_mul_temp[46:20];



  assign Product1_mul_temp = x_dt_out1 * Subsystem1_out1;
  assign Product1_out1 = Product1_mul_temp[46:20];



  assign Subtract2_out1 = Product1_out1 - Product3_out1;



  Lorenz_FP_ip_src_Subsystem2 u_Subsystem2 (.clk(clk),
                                            .reset(reset),
                                            .enb(clk_enable),
                                            .u(Subtract2_out1),  // sfix27_En20
                                            .reset_1(RST),
                                            .u0(z0_out1),  // sfix27_En20
                                            .Out1(Subsystem2_out1)  // sfix27_En20
                                            );

  assign Subtract1_out1 = rho_out1 - Subsystem2_out1;



  assign x_dt_mul_temp = Subsystem_out1 * dt_out1;
  assign x_dt_out1 = x_dt_mul_temp[46:20];



  assign Product_mul_temp = x_dt_out1 * Subtract1_out1;
  assign Product_out1 = Product_mul_temp[46:20];



  assign Subtract3_out1 = Product_out1 - y_dt_out1;



  Lorenz_FP_ip_src_Subsystem1 u_Subsystem1 (.clk(clk),
                                            .reset(reset),
                                            .enb(clk_enable),
                                            .u(Subtract3_out1),  // sfix27_En20
                                            .reset_1(RST),
                                            .u0(y0_out1),  // sfix27_En20
                                            .Out1(Subsystem1_out1)  // sfix27_En20
                                            );

  assign Subtract_out1 = Subsystem1_out1 - Subsystem_out1;



  assign Product2_mul_temp = sigma_dt_out1 * Subtract_out1;
  assign Product2_out1 = Product2_mul_temp[46:20];



  Lorenz_FP_ip_src_Subsystem u_Subsystem (.clk(clk),
                                          .reset(reset),
                                          .enb(clk_enable),
                                          .u(Product2_out1),  // sfix27_En20
                                          .reset_1(RST),
                                          .u0(x0_out1),  // sfix27_En20
                                          .Out1(Subsystem_out1)  // sfix27_En20
                                          );

  assign x = Subsystem_out1;

  assign y = Subsystem1_out1;

  assign z = Subsystem2_out1;

  assign ce_out = clk_enable;

endmodule  // Lorenz_FP_ip_src_Lorenz_FPGA_system

